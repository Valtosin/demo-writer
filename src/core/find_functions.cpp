#include "find_functions.h"
#include "sigscan/sigscan.h"
#include "byond_functions.h"
#include "core.h"

#ifdef _WIN32
#include <windows.h>
#endif

#ifdef _WIN32
#define BYONDCORE "byondcore.dll"
#else
#define BYONDCORE "libbyond.so"
#endif

#define FIND_OR_DIE(name, sig) name = (name##Ptr)Pocket::Sigscan::FindPattern(BYONDCORE, sig); if(!name) { Core::Alert("demo-writer: Failed to locate " #name); return false; }
#define TRUE_OR_DIE(thing) if(!thing) { Core::Alert("demo-writer: Failed to locate " #thing); return false; }

bool Core::find_functions()
{	
#ifdef _WIN32
	FIND_OR_DIE(GetStringTableEntry, "55 8B EC 8B 4D 08 3B 0D ?? ?? ?? ?? 73 10 A1");
	FIND_OR_DIE(ToString, "55 8B EC 6A FF 68 ?? ?? ?? ?? 64 A1 ?? ?? ?? ?? 50 83 EC 18 53 56 57 A1 ?? ?? ?? ?? 33 C5 50 8D 45 ?? 64 A3 ?? ?? ?? ?? 8B 4D ?? 0F B6 C1");
	FIND_OR_DIE(SetAppearance, "55 8b ec 8b 45 08 83 ec 08 0f b6 c8 53 8d 41 ff 56 57 83 f8 53 0f 87 ?? ?? ?? ?? 0f b6 80 ?? ?? ?? ?? ff 24 85 ?? ?? ?? ?? ff 75 0c ff 75 10 e8 ?? ?? ?? ?? 83 c4 08 5f 5e 5b 8b e5 5d c3");
	FIND_OR_DIE(SetPixelX, "55 8b ec 8b 45 08 56 3c 03 75 16 8b 75 0c 3b 35 ?? ?? ?? ?? 0f 83 ad 00 00 00 a1 ?? ?? ?? ?? eb 18 3c 02 75 78 8b 75 0c 3b 35 ?? ?? ?? ?? 0f 83 ?? ?? ?? ?? a1 ?? ?? ?? ?? 8b 34 b0 85 f6 0f 84 ?? ?? ?? ?? 8b 45 10 66 3b 46 24 74 7a 66 89 46 24");
	FIND_OR_DIE(SetPixelY, "55 8b ec 8b 45 08 56 3c 03 75 16 8b 75 0c 3b 35 ?? ?? ?? ?? 0f 83 ad 00 00 00 a1 ?? ?? ?? ?? eb 18 3c 02 75 78 8b 75 0c 3b 35 ?? ?? ?? ?? 0f 83 ?? ?? ?? ?? a1 ?? ?? ?? ?? 8b 34 b0 85 f6 0f 84 ?? ?? ?? ?? 8b 45 10 66 3b 46 26 74 7a 66 89 46 26");
	FIND_OR_DIE(SetPixelW, "55 8b ec 8b 45 08 56 3c 03 75 16 8b 75 0c 3b 35 ?? ?? ?? ?? 0f 83 ad 00 00 00 a1 ?? ?? ?? ?? eb 18 3c 02 75 78 8b 75 0c 3b 35 ?? ?? ?? ?? 0f 83 ?? ?? ?? ?? a1 ?? ?? ?? ?? 8b 34 b0 85 f6 0f 84 ?? ?? ?? ?? 8b 45 10 66 3b 46 28 74 7a 66 89 46 28");
	FIND_OR_DIE(SetPixelZ, "55 8b ec 8b 45 08 56 3c 03 75 16 8b 75 0c 3b 35 ?? ?? ?? ?? 0f 83 ad 00 00 00 a1 ?? ?? ?? ?? eb 18 3c 02 75 78 8b 75 0c 3b 35 ?? ?? ?? ?? 0f 83 ?? ?? ?? ?? a1 ?? ?? ?? ?? 8b 34 b0 85 f6 0f 84 ?? ?? ?? ?? 8b 45 10 66 3b 46 2a 74 7a 66 89 46 2a");
	FIND_OR_DIE(SetMovableDir, "55 8b ec 6a ff 68 ?? ?? ?? ?? 64 a1 00 00 00 00 50 81 ec ?? ?? ?? ?? a1 ?? ?? ?? ?? 33 c5 89 45 f0 53 56 57 50 8d 45 f4 64 a3 00 00 00 00 8b 45 08 8b 7d 0c 89 85 00 ff ff ff 0f b6 c0");
	FIND_OR_DIE(SetLoc, "55 8b ec ff 75 14 ff 75 10 e8 ?? ?? ?? ?? 83 c4 08 84 c0 75 04 32 c0 5d c3");
	FIND_OR_DIE(SpliceAppearance, "55 8b ec 53 56 8b d9 57 8b 7d 08 8b f7 8b 4b 38 d3 ee 3b 73 28");
	FIND_OR_DIE(SpliceString, "55 8b ec 83 ec 08 56 57 8b 7d 08 57 e8 ?? ?? ?? ?? 8b f0 83 c4 04 85 f6 0f 84 ?? ?? ?? ?? 57 e8 ?? ?? ?? ?? 83 c4 04");
	FIND_OR_DIE(GetVariable, "55 8B EC 8B 4D ?? 0F B6 C1 48 83 F8 ?? 0F 87 ?? ?? ?? ?? 0F B6 80 ?? ?? ?? ?? FF 24 85 ?? ?? ?? ?? FF 75 ?? FF 75 ?? E8 ?? ?? ?? ??");
	FIND_OR_DIE(AllocObjId, "56 57 8b 3d ?? ?? ?? ?? 85 ff 74 22 a1 ?? ?? ?? ?? 4f 89 3d ?? ?? ?? ?? 8b 3c b8 81 ff ff ff 00 00 74 0b 8b 35 ?? ?? ?? ?? e9 fb 00 00 00 8b 0d ?? ?? ?? ?? 8b f9 81 f9 ff ff ff 00 75 18 51 6a 08 68");
	FIND_OR_DIE(AllocMobId, "56 57 8b 3d ?? ?? ?? ?? 85 ff 74 22 a1 ?? ?? ?? ?? 4f 89 3d ?? ?? ?? ?? 8b 3c b8 81 ff ff ff 00 00 74 0b 8b 35 ?? ?? ?? ?? e9 fb 00 00 00 8b 0d ?? ?? ?? ?? 8b f9 81 f9 ff ff ff 00 75 18 51 6a 10 68");
	FIND_OR_DIE(ChangeTurf, "55 8b ec 83 ec 1c ff 75 18 ff 75 14 e8 ?? ?? ?? ?? 83 c4 08")

	char* get_appearance_ptr = (char*)Pocket::Sigscan::FindPattern(BYONDCORE, "55 8b ec 8b 4d 08 0f b6 c1 83 c0 fe 83 f8 4e 0f 87 ?? ?? ?? ?? 0f b6 80 ?? ?? ?? ?? ff 24 85 ?? ?? ?? ?? ff 75 0c e8 ?? ?? ?? ?? 83 c4 04 5d c3 ff 75 0c e8 ?? ?? ?? ?? 83 c4 04 5d c3", 0);
	TRUE_OR_DIE(get_appearance_ptr)
	GetObjAppearance = (GetObjAppearancePtr)(get_appearance_ptr + *(int*)(get_appearance_ptr + 39) + 43);
	GetMobAppearance = (GetMobAppearancePtr)(get_appearance_ptr + *(int*)(get_appearance_ptr + 52) + 56);

	//obj_table = std::make_unique<RefTable<Obj>>(Pocket::Sigscan::FindPattern(BYONDCORE, "55 8b ec 56 8b 75 08 6a 02 56 e8 ?? ?? ?? ?? ff 75 10 ff 75 0c 52 50 e8 ?? ?? ?? ?? 83 c4 18 84 c0 75 5a 3b 35 ?? ?? ?? ?? 73 52 a1 ?? ?? ?? ??"), 44, 37);
	//mob_table = std::make_unique<RefTable<Mob>>(Pocket::Sigscan::FindPattern(BYONDCORE, "55 8b ec 56 8b 75 08 6a 03 56 e8 ?? ?? ?? ?? ff 75 10 ff 75 0c 52 50 e8 ?? ?? ?? ?? 83 c4 18 84 c0 75 5a 3b 35 ?? ?? ?? ?? 73 52 a1 ?? ?? ?? ??"), 44, 37);
	obj_table = std::make_unique<RefTable<Obj>>((void*)GetObjAppearance, 16, 9);
	mob_table = std::make_unique<RefTable<Mob>>((void*)GetMobAppearance, 16, 9);
	appearance_table = *(AppearanceTable***)Pocket::Sigscan::FindPattern(BYONDCORE, "55 8b ec a1 ?? ?? ?? ?? 8b 4d 08 3b 48 44 73 08 8b 40 40 8b 04 88 5d c3", 4);
	void* get_id_list_ptr = Pocket::Sigscan::FindPattern(BYONDCORE, "55 8b ec 83 ec 0c 53 56 57 ff 75 08 e8 ?? ?? ?? ?? 83 c4 04 85 c0", 13);
	TRUE_OR_DIE(get_id_list_ptr)
	void* get_id_list = (void*)(*(int*)get_id_list_ptr + (int)get_id_list_ptr + 4);
	appearance_list_table = *(TableHolder2**)((int)get_id_list + 19);
	char* get_shared_turf_ptr = (char*)Pocket::Sigscan::FindPattern(BYONDCORE, "55 8b ec 8b 4d 08 3b 0d ?? ?? ?? ?? 73 12 a1 ?? ?? ?? ?? 8b 0c 88 a1 ?? ?? ?? ?? 8b 04 88 5d c3 33 c0 5d c3");
	TRUE_OR_DIE(get_shared_turf_ptr)
	turf_table = *(TurfTableHolder**)(get_shared_turf_ptr + 15);
	turf_shared_info_table = *(TurfSharedInfo****)(get_shared_turf_ptr + 23);
	turf_hashtable = *(TurfHashtableHolder**)Pocket::Sigscan::FindPattern(BYONDCORE, "55 8b ec a1 ?? ?? ?? ?? 8b 55 08 23 c2 0f b7 c8 a1 ?? ?? ?? ??", 17);
	TRUE_OR_DIE(turf_hashtable);
#else
	FIND_OR_DIE(GetStringTableEntry, "55 89 E5 83 EC 18 8B 45 ?? 39 05 ?? ?? ?? ?? 76 ?? 8B 15 ?? ?? ?? ?? 8B 04 ??");
	FIND_OR_DIE(ToString, "55 89 E5 83 EC 68 A1 ?? ?? ?? ?? 8B 15 ?? ?? ?? ?? 8B 0D ?? ?? ?? ?? 89 5D ??");
	FIND_OR_DIE(GetVariable, "55 89 E5 81 EC ?? ?? ?? ?? 8B 55 ?? 89 5D ?? 8B 5D ?? 89 75 ?? 8B 75 ??");
#endif
	return true;
}